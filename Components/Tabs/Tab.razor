@namespace TablerForNet.Components
@inherits TabBase

<li class="nav-item" role="presentation">
    <a @onclick="Activate"
       class="nav-link cursor-pointer @(IsDisabled ? "disabled" : IsActive)"
       data-toggle="tab"
       role="tab"
       aria-controls="@Title-id"
       aria-selected="@(IsActive == "active")"
       id="@Title-tab"
       style="cursor: @(IsDisabled ? "not-allowed" : "pointer")">
        @if (Header != null)
        {
            @Header
        }
        else
        {
            @Title
        }
    </a>
</li>

@code {
    [CascadingParameter] Tabs? ContainerTabSet { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public RenderFragment? Header { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    public bool IsContentLoaded { get; set; } = false;

    private bool _isDisabled;

    [Parameter]
    public bool IsDisabled
    {
        get => _isDisabled;
        set
        {
            if (value && ContainerTabSet?.ActiveTab == this)
            {
                ContainerTabSet?.ActivateAlternativeTab(this);
            }
            _isDisabled = value;
        }
    }

    string IsActive => ContainerTabSet?.ActiveTab == this ? "active" : "";

    protected override void OnInitialized()
    {
        ContainerTabSet?.AddTab(this);
        if (ContainerTabSet?.ActiveTab == this)
        {
            IsContentLoaded = true;
        }
    }


    public void Dispose()
    {
        ContainerTabSet?.RemoveTab(this);
    }

    void Activate()
    {
        if (IsDisabled)
        {
            return;
        }
        IsContentLoaded = true; 
        ContainerTabSet?.SetActivateTab(this);
        OnClick.InvokeAsync();
    }

}
